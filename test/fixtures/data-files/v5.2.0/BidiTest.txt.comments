# BidiTest-5.2.0.txt
# Date: 2009-06-03, 17:03:12 GMT [MD]
# Unicode Character Database
# Copyright (c) 1991-2009 Unicode, Inc.
# For terms of use, see http://www.unicode.org/terms_of_use.html
# For documentation, see http://www.unicode.org/reports/tr44/
# This file provides a conformance test for UBA (Unicode Bidi Algorithm) implementations.
# It is designed to be reasonably compact, and yet provide a thorough test of all cases up to
# a given limit (currently 4).
# Format:
# @Type:    <bidi_class>:  <set>
# These lines define which characters have the bidi_class property value,
# and are used in the remainder of the test.
#   <bidi_class> =  The bidi class property value
#   <set> =         All and only the those codepoints with that property value in <set>.
#                   <set> is a character range as defined in UTS #18 Unicode Regular Expressions.
# Example:
#   @Type:    AN:    [\u0600-\u0603\u0660-\u0669\u066B\u066C\u06DD]
# @Levels: <levels>
# These lines indicate that all following* data lines have the same resulting ordering levels
# (*that is, data lines up to the next @Levels).
#    <levels> =     An ordered space-delimited list of numbers indicating the resulting levels
#                   for each input property value. The UBA does not assign levels to certain values;
#                   those are indicated with an x. See the note below.
# Examples:
#   @Levels:    1 0
#   @Levels:    x 1 x 2
# @Reorder: <ordering>
# These lines indicate that all following* data lines have the same resulting reordering
# (*that is, data lines up to the next @Reorder).
#    <ordering> =   An ordered space-delimited list of numbers indicating the resulting
#                   ordering from left to right. The numbers are zero-based. Items with
#                   a level of x are skipped. Thus "1 0" indicates what would happen
#                   with input of "L R" and an RTL paragraph direction.
# Example:
#   @Reorder:    1 0
#   @Reorder:    3 1
# <input> ; <bitset>
#   <input>  =      An ordered list of BIDI property values
#   <bitset> =      A bitset for paragraph levels (P): 1 = automatic, 2 = LTR, 4 = RTL
# Example:
#    L LRE R R; 7
#    L LRE R AL; 7
# Usage:
# - If the implementation API allows a list of bidi property values as input:
#   For each of the paragraph levels in the bitset:
#     Find the levels in each line, and compare that to the last @Levels values.
#       If they are different, the test fails.
#     Reorder the elements, and compare to the @Reorder values.
#       If they are different, the test fails.
# - If the implementation allows for a character string as input,
#   randomly pick characters from the @type values, and test the reordering as above.
# Note that the UBA doesn't specify the output level or order of certain characters,
# such as LRO. These are omitted from the reordered output. Thus the following two
# input lines have the same result (0), since the LRE (item 1) is omitted on the second line.
#   L; 7
#   L LRE; 7