# BidiTest-6.0.0.txt
# Date: 2010-10-06, 03:47:43 GMT [MD]
# Unicode Character Database
# Copyright (c) 1991-2010 Unicode, Inc.
# For terms of use, see http://www.unicode.org/terms_of_use.html
# For documentation, see http://www.unicode.org/reports/tr44/
# This file provides a conformance test for UBA (Unicode Bidi Algorithm) implementations.
# It is designed to be reasonably compact, and yet provide a thorough test of all cases up to
# a given limit (currently 4).
# Format:
# All tokens may be separated by whitespaces (space or tab). There are three kinds of lines:
# Levels, Reorder, and data.
# A Levels line indicates that all following data lines, up to the next Levels line,
# have the same resulting ordering levels. It has the following format:
# @Levels: <levels>
#    <levels> =     An ordered space-delimited list of numbers indicating the resulting levels
#                   for each input property value. The UBA does not assign levels to certain values;
#                   those are indicated with an x. See the note below.
# Examples:
#   @Levels:    1 0
#   @Levels:    x 1 x 2
# A Reorder line indicates that all following data lines, up to the next Reorder line,
# have the same resulting reordering. It has the following format:
# @Reorder: <ordering>
#    <ordering> =   An ordered space-delimited list of numbers indicating the resulting
#                   visual ordering from left to right. The numbers are zero-based, and
#                   are indexes into the input string. Items with a level of x are skipped.
#                   Thus "1 0" indicates what would happen with input of "L R" and an RTL
#                   paragraph direction.
# Example:
#   @Reorder:    1 0
#   @Reorder:    3 1
# A data line has the following format:
# <input> ; <bitset>
#   <input>  =      An ordered list of BIDI property values
#   <bitset> =      A hex bitset for paragraph levels (P): 1 = auto-LTR, 2 = LTR, 4 = RTL
#                   Auto-LTR (standard BIDI) uses the first L/R/AL character, and is LTR if none is found.
# Example:
#    L LRE R R; 7
#    L LRE R AL; 7
# Any other line starting with @ is to be ignored (this allows some degree of forward compatibility).
# Usage:
# - If the implementation API allows a list of bidi property values as input:
#   For each of the paragraph levels in the bitset:
#     Find the levels in each line, and compare that to the last @Levels values.
#       If they are different, the test fails.
#     Reorder the elements, and compare to the @Reorder values.
#       If they are different, the test fails.
# - If the implementation allows for a character string as input,
#   randomly pick characters from those with the same Bidi_Class values,
#   and test the reordering as above.
# Note that the UBA doesn't specify the output level or order of certain characters,
# such as LRO. These are omitted from the reordered output. Thus the following two
# input lines have the same result (0), since the LRE (item 1) is omitted on the second line.
#   L; 7
#   L LRE; 7