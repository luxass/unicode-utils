# DerivedCoreProperties-16.0.0.txt
# Date: 2024-05-31, 18:09:32 GMT
# © 2024 Unicode®, Inc.
# Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries.
# For terms of use and license, see https://www.unicode.org/terms_of_use.html
#
# Unicode Character Database
#   For documentation, see https://www.unicode.org/reports/tr44/
# ================================================
# Derived Property: Math
#  Generated from: Sm + Other_Math
# Total code points: 2312
# ================================================
# Derived Property: Alphabetic
#  Generated from: Uppercase + Lowercase + Lt + Lm + Lo + Nl + Other_Alphabetic
# Total code points: 142759
# ================================================
# Derived Property: Lowercase
#  Generated from: Ll + Other_Lowercase
# Total code points: 2569
# ================================================
# Derived Property: Uppercase
#  Generated from: Lu + Other_Uppercase
# Total code points: 1978
# ================================================
# Derived Property:   Cased (Cased)
#  As defined by Unicode Standard Definition D135
#  C has the Lowercase or Uppercase property or has a General_Category value of Titlecase_Letter.
# Total code points: 4578
# ================================================
# Derived Property:   Case_Ignorable (CI)
#  As defined by Unicode Standard Definition D136
#  C is defined to be case-ignorable if
#    Word_Break(C) = MidLetter or MidNumLet or Single_Quote, or
#    General_Category(C) = Nonspacing_Mark (Mn), Enclosing_Mark (Me), Format (Cf), Modifier_Letter (Lm), or Modifier_Symbol (Sk).
# Total code points: 2749
# ================================================
# Derived Property:   Changes_When_Lowercased (CWL)
#  Characters whose normalized forms are not stable under a toLowercase mapping.
#  For more information, see D139 in Section 3.13, "Default Case Algorithms".
#  Changes_When_Lowercased(X) is true when toLowercase(toNFD(X)) != toNFD(X)
# Total code points: 1460
# ================================================
# Derived Property:   Changes_When_Uppercased (CWU)
#  Characters whose normalized forms are not stable under a toUppercase mapping.
#  For more information, see D140 in Section 3.13, "Default Case Algorithms".
#  Changes_When_Uppercased(X) is true when toUppercase(toNFD(X)) != toNFD(X)
# Total code points: 1552
# ================================================
# Derived Property:   Changes_When_Titlecased (CWT)
#  Characters whose normalized forms are not stable under a toTitlecase mapping.
#  For more information, see D141 in Section 3.13, "Default Case Algorithms".
#  Changes_When_Titlecased(X) is true when toTitlecase(toNFD(X)) != toNFD(X)
# Total code points: 1479
# ================================================
# Derived Property:   Changes_When_Casefolded (CWCF)
#  Characters whose normalized forms are not stable under case folding.
#  For more information, see D142 in Section 3.13, "Default Case Algorithms".
#  Changes_When_Casefolded(X) is true when toCasefold(toNFD(X)) != toNFD(X)
# Total code points: 1533
# ================================================
# Derived Property:   Changes_When_Casemapped (CWCM)
#  Characters whose normalized forms are not stable under case mapping.
#  For more information, see D143 in Section 3.13, "Default Case Algorithms".
#  Changes_When_Casemapped(X) is true when CWL(X), or CWT(X), or CWU(X)
# Total code points: 2981
# ================================================
# Derived Property: ID_Start
#  Characters that can start an identifier.
#  Generated from:
#      Lu + Ll + Lt + Lm + Lo + Nl
#    + Other_ID_Start
#    - Pattern_Syntax
#    - Pattern_White_Space
#  NOTE: See UAX #31 for more information
# Total code points: 141269
# ================================================
# Derived Property: ID_Continue
#  Characters that can continue an identifier.
#  Generated from:
#      ID_Start
#    + Mn + Mc + Nd + Pc
#    + Other_ID_Continue
#    - Pattern_Syntax
#    - Pattern_White_Space
#  NOTE: See UAX #31 for more information
# Total code points: 144541
# ================================================
# Derived Property: XID_Start
#  ID_Start modified for closure under NFKx
#  Modified as described in UAX #15
#  NOTE: Does NOT remove the non-NFKx characters.
#        Merely ensures that if isIdentifer(string) then isIdentifier(NFKx(string))
#  NOTE: See UAX #31 for more information
# Total code points: 141246
# ================================================
# Derived Property: XID_Continue
#  Mod_ID_Continue modified for closure under NFKx
#  Modified as described in UAX #15
#  NOTE: Does NOT remove the non-NFKx characters.
#        Merely ensures that if isIdentifer(string) then isIdentifier(NFKx(string))
#  NOTE: See UAX #31 for more information
# Total code points: 144522
# ================================================
# Derived Property: Default_Ignorable_Code_Point
#  Generated from
#    Other_Default_Ignorable_Code_Point
#  + Cf (Format characters)
#  + Variation_Selector
#  - White_Space
#  - FFF9..FFFB (Interlinear annotation format characters)
#  - 13430..13440 (Egyptian hieroglyph format characters)
#  - Prepended_Concatenation_Mark (Exceptional format characters that should be visible)
#
# There are currently no stability guarantees for DICP. However, the
# values of DICP interact with the derivation of XID_Continue
# and NFKC_CF, for which there are stability guarantees.
# Maintainers of this property should note that in the
# unlikely case that the DICP value changes for an existing character
# which is also XID_Continue=Yes, then exceptions must be put
# in place to ensure that the NFKC_CF mapping value for that
# existing character does not change.
# Total code points: 4174
# ================================================
# Derived Property: Grapheme_Extend
#  Generated from: Me + Mn + Other_Grapheme_Extend
#  Note: depending on an application's interpretation of Co (private use),
#  they may be either in Grapheme_Base, or in Grapheme_Extend, or in neither.
# Total code points: 2193
# ================================================
# Derived Property: Grapheme_Base
#  Generated from: [0..10FFFF] - Cc - Cf - Cs - Co - Cn - Zl - Zp - Grapheme_Extend
#  Note: depending on an application's interpretation of Co (private use),
#  they may be either in Grapheme_Base, or in Grapheme_Extend, or in neither.
# Total code points: 152730
# ================================================
# Derived Property: Grapheme_Link (deprecated)
#  Generated from: Canonical_Combining_Class=Virama
#  Use Canonical_Combining_Class=Virama directly instead
# Total code points: 69
# ================================================
# Derived Property: Indic_Conjunct_Break
#  Generated from the Grapheme_Cluster_Break, Indic_Syllabic_Category,
#  Canonical_Combining_Class, and Script properties as described in UAX #44:
#  https://www.unicode.org/reports/tr44/.
#  All code points not explicitly listed for Indic_Conjunct_Break
#  have the value None.
# @missing: 0000..10FFFF; InCB; None
# ================================================
# Indic_Conjunct_Break=Linker
# Total code points: 6
# ================================================
# Indic_Conjunct_Break=Consonant
# Total code points: 240
# ================================================
# Indic_Conjunct_Break=Extend
# Total code points: 2192
# EOF