# BidiTest-6.2.0.txt
# Date: 2010-10-06, 03:47:43 GMT [MD]
#
# Unicode Character Database
# Copyright (c) 1991-2012 Unicode, Inc.
# For terms of use, see http://www.unicode.org/terms_of_use.html
# For documentation, see http://www.unicode.org/reports/tr44/
#
# This file provides a conformance test for UBA (Unicode Bidi Algorithm) implementations.
# It is designed to be reasonably compact, and yet provide a thorough test of all cases up to
# a given limit (currently 4).
#
# Format:
#
# All tokens may be separated by whitespaces (space or tab). There are three kinds of lines:
# Levels, Reorder, and data.
#
# A Levels line indicates that all following data lines, up to the next Levels line,
# have the same resulting ordering levels. It has the following format:
#
# @Levels: <levels>
#
#    <levels> =     An ordered space-delimited list of numbers indicating the resulting levels
#                   for each input property value. The UBA does not assign levels to certain values;
#                   those are indicated with an x. See the note below.
# Examples:
#   @Levels:    1 0
#   @Levels:    x 1 x 2
#
# A Reorder line indicates that all following data lines, up to the next Reorder line,
# have the same resulting reordering. It has the following format:
#
# @Reorder: <ordering>
#
#    <ordering> =   An ordered space-delimited list of numbers indicating the resulting
#                   visual ordering from left to right. The numbers are zero-based, and
#                   are indexes into the input string. Items with a level of x are skipped.
#                   Thus "1 0" indicates what would happen with input of "L R" and an RTL
#                   paragraph direction.
# Example:
#   @Reorder:    1 0
#   @Reorder:    3 1
#
# A data line has the following format:
# <input> ; <bitset>
#   <input>  =      An ordered list of BIDI property values
#   <bitset> =      A hex bitset for paragraph levels (P): 1 = auto-LTR, 2 = LTR, 4 = RTL
#                   Auto-LTR (standard BIDI) uses the first L/R/AL character, and is LTR if none is found.
# Example:
#    L LRE R R; 7
#    L LRE R AL; 7
#
# Any other line starting with @ is to be ignored (this allows some degree of forward compatibility).
#
# Usage:
#
# - If the implementation API allows a list of bidi property values as input:
#
#   For each of the paragraph levels in the bitset:
#     Find the levels in each line, and compare that to the last @Levels values.
#       If they are different, the test fails.
#     Reorder the elements, and compare to the @Reorder values.
#       If they are different, the test fails.
#
# - If the implementation allows for a character string as input,
#   randomly pick characters from those with the same Bidi_Class values,
#   and test the reordering as above.
#
# Note that the UBA doesn't specify the output level or order of certain characters,
# such as LRO. These are omitted from the reordered output. Thus the following two
# input lines have the same result (0), since the LRE (item 1) is omitted on the second line.
#
#   L; 7
#   L LRE; 7
#
#Count:	6
#Count:	10
#Count:	10
#Count:	3
#Count:	36
#Count:	54
#Count:	54
#Count:	18
#Count:	32
#Count:	49
#Count:	26
#Count:	19
#Count:	4
#Count:	216
#Count:	90
#Count:	18
#Count:	9
#Count:	324
#Count:	16
#Count:	90
#Count:	26
#Count:	324
#Count:	9
#Count:	26
#Count:	14
#Count:	108
#Count:	156
#Count:	258
#Count:	156
#Count:	114
#Count:	24
#Count:	164
#Count:	215
#Count:	118
#Count:	129
#Count:	94
#Count:	42
#Count:	10
#Count:	1296
#Count:	486
#Count:	108
#Count:	54
#Count:	288
#Count:	189
#Count:	198
#Count:	18
#Count:	9
#Count:	1944
#Count:	84
#Count:	486
#Count:	156
#Count:	56
#Count:	322
#Count:	211
#Count:	171
#Count:	36
#Count:	1944
#Count:	48
#Count:	138
#Count:	84
#Count:	30
#Count:	105
#Count:	82
#Count:	57
#Count:	12
#Count:	648
#Count:	204
#Count:	53
#Count:	38
#Count:	2
#Count:	1
#Count:	936
#Count:	83
#Count:	370
#Count:	92
#Count:	19
#Count:	4
#Count:	1548
#Count:	78
#Count:	120
#Count:	208
#Count:	16
#Count:	8
#Count:	936
#Count:	6
#Count:	57
#Count:	10
#Count:	172
#Count:	27
#Count:	684
#Count:	3
#Count:	12
#Count:	6
#Count:	19
#Count:	16
#Count:	144
#Count:	768
#Count:	1074
#Count:	708
#Count:	774
#Count:	564
#Count:	252
#Count:	60
#Count:	844
#Count:	1099
#Count:	520
#Count:	641
#Count:	604
#Count:	464
#Count:	304
#Count:	92
#Count:	24
#Count:	810
#Count:	162
#Count:	81
#Count:	2916
#Count:	144
#Count:	54
#Count:	36
#Count:	648
#Count:	81
#Count:	18
#Count:	18
#Count:	324
#Count:	1404
#Count:	1134
#Count:	1188
#Count:	108
#Count:	54
#Count:	1476
#Count:	603
#Count:	918
#Count:	702
#Count:	459
#Count:	36
#Count:	18
#Count:	128
#Count:	8
#Count:	6
#Count:	504
#Count:	48
#Count:	810
#Count:	234
#Count:	2916
#Count:	31
#Count:	227
#Count:	118
#Count:	936
#Count:	264
#Count:	1608
#Count:	1266
#Count:	1026
#Count:	216
#Count:	296
#Count:	1578
#Count:	753
#Count:	895
#Count:	790
#Count:	378
#Count:	90
#Count:	80
#Count:	6
#Count:	3
#Count:	288
#Count:	16
#Count:	230
#Count:	55
#Count:	828
#Count:	18
#Count:	120
#Count:	78
#Count:	504
#Count:	144
#Count:	522
#Count:	492
#Count:	342
#Count:	72
#Count:	156
#Count:	511
#Count:	308
#Count:	311
#Count:	266
#Count:	126
#Count:	30
#Count:	1068
#Count:	318
#Count:	228
#Count:	12
#Count:	6
#Count:	744
#Count:	405
#Count:	456
#Count:	110
#Count:	67
#Count:	4
#Count:	2
#Count:	372
#Count:	2064
#Count:	552
#Count:	114
#Count:	24
#Count:	513
#Count:	1037
#Count:	837
#Count:	756
#Count:	226
#Count:	42
#Count:	10
#Count:	336
#Count:	582
#Count:	1248
#Count:	96
#Count:	48
#Count:	568
#Count:	656
#Count:	477
#Count:	510
#Count:	424
#Count:	38
#Count:	19
#Count:	24
#Count:	228
#Count:	60
#Count:	1032
#Count:	162
#Count:	50
#Count:	487
#Count:	75
#Count:	206
#Count:	390
#Count:	365
#Count:	78
#Count:	12
#Count:	48
#Count:	36
#Count:	114
#Count:	96
#Count:	25
#Count:	99
#Count:	19
#Count:	36
#Count:	87
#Count:	59
#Count:	13
#Count:	888
#Count:	195
#Count:	166
#Count:	78
#Count:	51
#Count:	4
#Count:	2
#Count:	281
#Count:	1386
#Count:	328
#Count:	91
#Count:	86
#Count:	42
#Count:	10
#Count:	354
#Count:	412
#Count:	984
#Count:	80
#Count:	40
#Count:	234
#Count:	273
#Count:	50
#Count:	1192
#Count:	181
#Count:	153
#Count:	258
#Count:	30
#Count:	129
#Count:	772
#Count:	64
#Count:	32
#Count:	12
#Count:	126
#Count:	40
#Count:	356
#Count:	62
#Count:	6
#Count:	30
#Count:	24
#Count:	42
#Count:	36
#Count:	4374
#Count:	972
#Count:	486
#Count:	2592
#Count:	1701
#Count:	1782
#Count:	162
#Count:	81
#Count:	756
#Count:	324
#Count:	216
#Count:	504
#Count:	414
#Count:	432
#Count:	36
#Count:	18
#Count:	432
#Count:	108
#Count:	108
#Count:	270
#Count:	189
#Count:	216
#Count:	18
#Count:	9
#Count:	1836
#Count:	477
#Count:	342
#Count:	18
#Count:	9
#Count:	747
#Count:	1602
#Count:	279
#Count:	702
#Count:	189
#Count:	1656
#Count:	144
#Count:	72
#Count:	54
#Count:	90
#Count:	54
#Count:	36
#Count:	27
#Count:	54
#Count:	18
#Count:	18
#Count:	684
#Count:	48
#Count:	36
#Count:	392
#Count:	84
#Count:	262
#Count:	28
#Count:	14
#Count:	252
#Count:	4374
#Count:	1404
#Count:	200
#Count:	2864
#Count:	1893
#Count:	1539
#Count:	324
#Count:	162
#Count:	1206
#Count:	708
#Count:	110
#Count:	834
#Count:	690
#Count:	494
#Count:	104
#Count:	304
#Count:	50
#Count:	52
#Count:	4
#Count:	2
#Count:	198
#Count:	2168
#Count:	667
#Count:	171
#Count:	36
#Count:	182
#Count:	947
#Count:	1758
#Count:	144
#Count:	72
#Count:	12
#Count:	513
#Count:	90
#Count:	1548
#Count:	243
#Count:	6
#Count:	108
#Count:	54
#Count:	171
#Count:	144
#Count:	432
#Count:	36
#Count:	18
#Count:	240
#Count:	63
#Count:	151
#Count:	16
#Count:	8
#Count:	84
#Count:	1242
#Count:	330
#Count:	72
#Count:	839
#Count:	437
#Count:	427
#Count:	87
#Count:	96
#Count:	636
#Count:	468
#Count:	60
#Count:	458
#Count:	485
#Count:	276
#Count:	61
#Count:	184
#Count:	29
#Count:	26
#Count:	2
#Count:	1
#Count:	83
#Count:	698
#Count:	184
#Count:	57
#Count:	12
#Count:	96
#Count:	410
#Count:	668
#Count:	48
#Count:	24
#Count:	6
#Count:	171
#Count:	30
#Count:	516
#Count:	81
#Count:	3
#Count:	36
#Count:	18
#Count:	57
#Count:	48
#Count:	1668
#Count:	358
#Count:	202
#Count:	4
#Count:	2
#Count:	339
#Count:	274
#Count:	95
#Count:	222
#Count:	53
#Count:	216
#Count:	16
#Count:	8
#Count:	6
#Count:	10
#Count:	6
#Count:	4
#Count:	3
#Count:	6
#Count:	2
#Count:	2
#Count:	358
#Count:	165
#Count:	33
#Count:	594
#Count:	3326
#Count:	686
#Count:	38
#Count:	8
#Count:	131
#Count:	637
#Count:	506
#Count:	16
#Count:	8
#Count:	57
#Count:	10
#Count:	172
#Count:	27
#Count:	12
#Count:	6
#Count:	19
#Count:	16
#Count:	280
#Count:	33
#Count:	164
#Count:	14
#Count:	7
#Count:	83
#Count:	702
#Count:	305
#Count:	14
#Count:	7
#Count:	576
#Count:	816
#Count:	1892
#Count:	128
#Count:	64
#Count:	48
#Count:	48
#Count:	80
#Count:	48
#Count:	32
#Count:	24
#Count:	24
#Count:	48
#Count:	16
#Count:	16
#Count:	12
#Count:	12
#Count:	4
#Count:	4
#Count:	114
#Count:	12
#Count:	153
#Count:	25
#Count:	30
#Count:	30
#Count:	74
#Count:	4
#Count:	2
#Count:	18
#Count:	516
#Count:	30
#Count:	1696
#Count:	215
#Count:	12
#Count:	81
#Count:	19
#Count:	140
#Count:	118
#Count:	6
#Count:	7
#Count:	2
#Count:	1
#Count:	24
#Count:	7
#Count:	23
#Count:	10
#Count:	18
#Count:	18
#Count:	49
#Count:	4
#Count:	2
#Count:	6
#Count:	57
#Count:	10
#Count:	156
#Count:	54
#Count:	6
#Count:	48
#Count:	12
#Count:	82
#Count:	83
#Count:	7290
#Count:	1458
#Count:	729
#Count:	1296
#Count:	486
#Count:	324
#Count:	729
#Count:	162
#Count:	162
#Count:	1152
#Count:	72
#Count:	54
#Count:	432
#Count:	342
#Count:	279
#Count:	279
#Count:	72
#Count:	126
#Count:	720
#Count:	54
#Count:	27
#Count:	144
#Count:	144
#Count:	72
#Count:	162
#Count:	36
#Count:	45
#Count:	1056
#Count:	68
#Count:	38
#Count:	64
#Count:	48
#Count:	39
#Count:	49
#Count:	12
#Count:	18
#Count:	384
#Count:	40
#Count:	34
#Count:	304
#Count:	7290
#Count:	2113
#Count:	241
#Count:	2050
#Count:	1048
#Count:	247
#Count:	16
#Count:	12
#Count:	64
#Count:	2010
#Count:	479
#Count:	107
#Count:	1017
#Count:	655
#Count:	720
#Count:	64
#Count:	32
#Count:	48
#Count:	30
#Count:	18
#Count:	27
#Count:	6
#Count:	6
#Count:	128
#Count:	16
#Count:	10
#Count:	128
#Count:	2070
#Count:	526
#Count:	67
#Count:	483
#Count:	257
#Count:	160
#Count:	12
#Count:	6
#Count:	32
#Count:	1060
#Count:	262
#Count:	45
#Count:	666
#Count:	478
#Total Count:	216357
# EOF